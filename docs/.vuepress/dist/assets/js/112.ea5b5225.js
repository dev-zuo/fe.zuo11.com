(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{475:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1. 前言")]),t._v(" "),a("p",[t._v("该系列笔记整理自：")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://ts.xcatliu.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript入门教程"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.typescriptlang.org/docs/home.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts非官方中文文档"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"什么是typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是typescript"}},[t._v("#")]),t._v(" 什么是TypeScript")]),t._v(" "),a("ul",[a("li",[t._v("TypeScript是JS的超集，主要提供了类型系统和对ES6的支持。Type Script 从字面意思来看，type 为类型。")]),t._v(" "),a("li",[t._v("官方解释："),a("strong",[t._v("TypeScript is a superset of JavaScript that compiles to clean JavaScript output.")]),t._v(" （TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器和任何系统上。TypeScript 是开源的）")]),t._v(" "),a("li",[t._v("TypeScript 第一个版本发布于 2012 年 10 月，由微软开发，开源地址："),a("a",{attrs:{href:"https://github.com/Microsoft/TypeScript",target:"_blank",rel:"noopener noreferrer"}},[t._v("microsoft/TypeScript"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("TypeScript 之父是 "),a("a",{attrs:{href:"https://github.com/ahejlsberg",target:"_blank",rel:"noopener noreferrer"}},[t._v("Anders Hejlsberg"),a("OutboundLink")],1),t._v("，一个60岁还在写代码的大神。相关介绍: "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/zyxpaouWaUcb5jS5kGJg4Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("程序员之神"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("TypeScript 简称 ts")]),t._v(" "),a("li",[t._v("TypeScript 编写的文件以 .ts 为后缀，用 TypeScript 编写 React 时，以 .tsx 为后缀。")])]),t._v(" "),a("h2",{attrs:{id:"为什么要学习typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要学习typescript"}},[t._v("#")]),t._v(" 为什么要学习TypeScript")]),t._v(" "),a("p",[t._v("vscode、vue3.0、Angular2 都是使用TypeScipt编写，有可以写客户端软件，又可以写前端。")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/21879449",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何评价TypeScript - 知乎"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("为什么大佬们都开始使用TypeScript，从js换成ts，有哪些好处，可以举几个例子吗？")])]),t._v(" "),a("h3",{attrs:{id:"没系统学习ts前的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没系统学习ts前的理解"}},[t._v("#")]),t._v(" 没系统学习ts前的理解")]),t._v(" "),a("ul",[a("li",[t._v("对前端的友好性：ts完全兼容js(ts就是js的超集), .ts文件里完全写js都可以(把.js命名为.ts也可以)，js可以做的ts都可以，ts还额外增加了很多功能特性。")])]),t._v(" "),a("h3",{attrs:{id:"系统学习ts后的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统学习ts后的理解"}},[t._v("#")]),t._v(" 系统学习ts后的理解")]),t._v(" "),a("p",[t._v("待学习后补充")]),t._v(" "),a("h2",{attrs:{id:"怎么安装使用typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么安装使用typescript"}},[t._v("#")]),t._v(" 怎么安装使用TypeScript")]),t._v(" "),a("p",[t._v("安装ts")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用npm全局安装typescript")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g typescript\n")])])]),a("p",[t._v("安装完成后，就可以在terminal里使用 "),a("code",[t._v("tsc")]),t._v(" 命令了, 运行tsc命令可以查看对应的文档。")]),t._v(" "),a("h3",{attrs:{id:"tsc-是做什么用的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsc-是做什么用的"}},[t._v("#")]),t._v(" tsc 是做什么用的?")]),t._v(" "),a("p",[t._v("编写一个hello.ts文件，运行 "),a("code",[t._v("tsc hello.ts")]),t._v(" 会在当前目录生成一份对应的js文件，也就是 "),a("strong",[t._v("将对应的ts文件编译为js文件")])]),t._v(" "),a("p",[t._v("hello.ts")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里用一个ts的功能特性，函数传参时，使用 : 约束参数的类型，: 的前后有没有空格都可以。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("tsc hello.ts 后生成的 hello.js, ts 编译为 js 之后，并没有什么检查的代码被插入进来。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("这里sayHello参数name约定为string类型，如果传了数字123，会怎么样?")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hello.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",[a("li",[t._v("vscode会直接报错")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/ts/0_0_vscode_check.png",alt:"0_0_vscode_check.png"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("tsc hello.ts时会报错，注意："),a("strong",[t._v("就算报错但依旧可以编译生成js")])])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("0_hello.ts:7:10 - error TS2345: Argument of "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),t._v(" is not assignable to parameter of "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" sayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n           ~~~\nFound "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" error.\n")])])]),a("p",[t._v("编译后的js")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"tsconfig-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),a("p",[t._v("上面的例子中，就算编译错误，也会生成js。如果要在报错的时候终止 js 文件的生成，可以在 tsconfig.json 中配置 noEmitOnError 即可。")]),t._v(" "),a("p",[t._v("关于tsconfig.json可以参考: "),a("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/tsconfig.json.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("工程配置 · TypeScript Handbook（中文版）"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);