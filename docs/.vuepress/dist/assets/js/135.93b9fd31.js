(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{500:function(v,_,e){"use strict";e.r(_);var o=e(27),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"_45-脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_45-脚本"}},[v._v("#")]),v._v(" 45 脚本")]),v._v(" "),e("p",[v._v("Hello，大家好，我是小白，今天是第 45 周，更新了 8 篇内容。")]),v._v(" "),e("p",[v._v("下面这张思维导图，是今天更新的内容，包括 service worker 服务器推送消息、mocha 超时，bdd 风格，301 和 302、koa 解析 text/plain 和 formdata 数据等")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("先来看第一个问题，使用 service worker 接收服务器推送消息并显示通知")]),v._v(" "),e("p",[v._v("下面这张图，是 yutube 推送的通知，我们点击对应的通知就可以打开对应的页面。")]),v._v(" "),e("p",[v._v("这里使用了 Notification API 显示通知，关于通知显示的内容，是可以通过服务器来进行推送的。")]),v._v(" "),e("p",[v._v("想要接收服务器推送消息，就必须先订阅服务器推送事件")]),v._v(" "),e("p",[v._v("我们可以使用 registration.pushManager.subscribe() 来订阅服务器推送事件。")]),v._v(" "),e("p",[v._v("这里要注意的是，订阅这个动作不会向服务器发送 http 请求，主要是浏览器厂商对应的推送服务在起作用。")]),v._v(" "),e("p",[v._v("发起订阅后，浏览器内部会进行一些处理，订阅成功后，会返回一个 PushSubscription 对象，里面包含了 endpoint 服务器推送入口地址 和 秘钥 信息。")]),v._v(" "),e("p",[v._v("在这张图里面我们可以看到，Firefox 和 Chrome 他们各自的推送服务地址是不一样的。")]),v._v(" "),e("p",[v._v("拿到这些信息后，通过向浏览器厂商提供的 endpoint 发送请求，浏览器就会对数据进行推送")]),v._v(" "),e("p",[v._v("可以在 service worker 中使用 onpush 可以接收推送的消息。接收到消息后，再调用 Notification API 就可以显示服务器推送的消息了。")]),v._v(" "),e("p",[v._v("这里需要注意几点：")]),v._v(" "),e("ol",[e("li",[v._v("service worker 由于可以拦截所有请求，需要在安全的上下文中才能使用，必须是 https，如果是 http navigator.serviceWorker 会是 undefined。127.0.0.1 和 localhost 都在白名单里面，可以进行本地调试。")]),v._v(" "),e("li",[v._v("由于推送服务依赖浏览器自身的推送服务 API，而 Google 服务在国内被墙，所以在 Chrome 中调用 registration.pushManager.subscribe() 订阅服务器推送消息时，可能会一直 pending，根本拿不到 PushSubscription，需要科学上网才行。不能科学上网的，可以使用 Firefox 调试。")]),v._v(" "),e("li",[v._v("registration.pushManager.subscribe() 需要使用的秘钥参数，可以通过 web-push 开源库，来生成秘钥对。这个开源库，还可以用于拿到 PushSubscription 后，向浏览器推送服务 endpoint 发送消息")]),v._v(" "),e("li",[v._v("在测试调试时，可以使用 web-push-codelab 这个网站生成的秘钥来进行调试")]),v._v(" "),e("li",[v._v("Safari 目前还不支持这个功能")])]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("我们再来看下一问题：mocha 默认 2 秒钟超时的问题")]),v._v(" "),e("p",[v._v("在 mocha 中，默认的超时时间是 2s，如果超过 2s 会报 Error: Timeout of 2000ms exceeded，无法知道测试结果。我们可以在 it 回调函数里面使用 this.timeout() 方法修改默认的超时时间，")]),v._v(" "),e("p",[v._v("下面这个例子是一个耗时 3s 的测试，默认情况下会报超时，如果我们使用 this.timeout 将超时时间设置为 5s 那么久可以正常接收到测试的结果。")]),v._v(" "),e("p",[v._v("注意这里回调函数不能是 箭头函数，不然无法调用 mocha 上下文的 timeout 方法")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看下一个问题，什么是 BDD 风格")]),v._v(" "),e("p",[v._v("在 mocha 官网介绍 should.js 断言库的时候，说它是一种 BDD 风格的断言库，而且在 mocha 的源码中也有很多以 bdd 命名的变量。")]),v._v(" "),e("p",[v._v("我们先来看看 BDD 是什么？")]),v._v(" "),e("p",[v._v("BDD 它是 Behaior Driven Development 行为驱动开发，是一种软件开发方法。")]),v._v(" "),e("p",[v._v('它的核心是各个业务流程中尽量避免信息丢失，一般使用 "用户故事" 来描述需求。')]),v._v(" "),e("p",[v._v("BDD 风格强调使用好理解的名称或术语，避免使用技术术语")]),v._v(" "),e("p",[v._v("下面有放了一些相关链接，大家可以详细的了解下。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看下一个问题 http 301 与 302")]),v._v(" "),e("p",[v._v("这两个状态码都是用来表示重定向，有两个用处\n一是告诉浏览器，访问该页面时，需要跳转到新的 URL\n二是告诉搜索引擎如何正确的处理页面的收录、索引")]),v._v(" "),e("p",[v._v("这两个状态码，是需要我们自己根据实际需要去处理的，将需要重定向的页面设置到 Location 响应头，如果是永久性重定向，使用 301 状态码，如果是临时重定向使用 302 状态码。")]),v._v(" "),e("p",[v._v("浏览器在介绍到 301/302 的状态码时，会重定向到 Location 指定的页面")]),v._v(" "),e("p",[v._v('下面是 koa 处理 301 跳转的一个例子，当访问 "/test" 连接时，使用 301 重定向到 www.zuo11.com')]),v._v(" "),e("p",[v._v("理论上搜索引擎在看到 301 状态码时，会增加新链接的收录和索引，将旧链接的权重值转移到新的页面，旧链接的收录和索引会被删除。")]),v._v(" "),e("p",[v._v("如果是 302 状态码，搜索引擎会保留原链接的收录和索引，新增新链接的收录和索引，一般较少使用。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看下一个问题  koa 怎么获取 post 请求发送的 text/plain 纯文本数据")]),v._v(" "),e("p",[v._v("在 Beacon [ˈbiːkən] API 中，发送的是数据类型为 text/plain 的 post 请求，在测试的时候使用 koa-bodyparser 来接收发现接收不到参数。")]),v._v(" "),e("p",[v._v("之前测试 json 数据、序列化数据的时候都是好的，于是查了下文档，发现默认情况下不支持 text 文本类型的数据，需要在调用中间件时使用 enableTypes 手动指定 text 参数才可以。")]),v._v(" "),e("p",[v._v("下面还列出了 koa-bobyparser 中间件的一些其他限制，可以了解下。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看下一个问题：koa 使用 multer 处理 formdata 数据")]),v._v(" "),e("p",[v._v("一般在文件上传的时候，需要使用 formData 数据。这里是前端上传文件的 demo，使用 fetch api 发送上传文件请求。")]),v._v(" "),e("p",[v._v("在 koa 处理文件上传时，可以使用 multer 中间件。一般在路由的第 2 个参数指定，分三种情况")]),v._v(" "),e("ol",[e("li",[v._v("单文件上传")]),v._v(" "),e("li",[v._v("多文件上传")]),v._v(" "),e("li",[v._v("非文件上传，仅字段")])]),v._v(" "),e("p",[v._v("单文件上传时，路由第二个参数为 multer().single() , 我们这里前面使用的文件字段是 image。在 ctx.file 中可以拿到上传的文件想你想\n多文件上传时使用 multer().fields() , 在 ctx.files 中可以拿到文件数据对象\n非文件上传，仅字段时，使用 multer().none()")]),v._v(" "),e("p",[v._v("上面三种情况都可以在 ctx.request.body 里面拿到前端在 fromdata 里传入的非文件字段信息")]),v._v(" "),e("p",[v._v("者这里 file 对象，有下面几个属性，文件名，文件大小，文件二进制数据，可以直接使用 fs.wirteFile 将 二进制数据写入文件，也就是将上传的文件保存到服务端。")]),v._v(" "),e("p",[v._v("下面留了一个 测试 demo 的 github 链接，大家可以 fork 下来跑一下。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看下一个问题 甚至了允许跨域请求头后，为了么还是不能跨域")]),v._v(" "),e("p",[v._v("我们这里设置了运行跨域的请求头，但发现还是不能跨域")]),v._v(" "),e("p",[v._v("我们需要深入了解请求预检的过程。这里我们只是在 post 请求中设置了允许跨域，而请求预检会发送对应的 options 请求。所以需要特别注意，还需要在对应 options 请求的处理中，添加允许跨域的请求头。")]),v._v(" "),e("p",[v._v("加上后，就可以正常跨域了。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("再来看最后一个问题 socket Bad handshake method")]),v._v(" "),e("p",[v._v("在 socket.io 里面，发现请求时一直报 Bad handshake method  400 的错误，socket 连接建立不上，后面发现是客户端的 socket.io\n的版本和 服务端 socket.io 的版本不一致导致的，把版本修改为一致就好了。大家了解一下就可以")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("这期的内容就介绍完了，下面来简单的总结下")]),v._v(" "),e("p",[v._v("首先我们介绍了 web push 使用 service worker 来进行服务器推送消息，需要注意的是，web push 依赖的是浏览器厂商的推送服务 api。需要是 https，而且 chrome 需要科学上网。\n后面介绍了 mocha 使用 timeout 函数解决默认超时 2s 的问题\n后面又简单的了解了什么是 BDD 风格，bdd 是 行为驱动开发 的缩写，bdd 风格强调的是在命名时要便于理解，少用专业术语\n再后面是 301 和 302 的区别，301 是 永久性重定向，302 是临时性重定向，重定向的页面由 Location 响应头指定\n后面我们又介绍了 koa 怎么处理 纯文本 以及 formdata 数据，在处理纯文本时，需要在初始化 koa-bodyparser 中间件时使用 enableTypes 增加对纯文本解析的支持。\n解析 formdata 数据建议使用 multer 中间件，对于单文件、多文件、纯字段这三种情况，中间件的使用和获取文件数据的方法各不相同\n后面又介绍了跨域请求时，需要特别要注意 options 预检请求的问题\n最后介绍了 socket.io 出现 Bad handshake method 的问题，需要注意客户端和服务端使用的版本要一致。")]),v._v(" "),e("p",[v._v("大家可以在我的个人网站 zuo11.com 里面看到这次更新的详细内容")]),v._v(" "),e("p",[v._v("今天的内容就到这里了，大家下期再见。")])])}),[],!1,null,null,null);_.default=t.exports}}]);