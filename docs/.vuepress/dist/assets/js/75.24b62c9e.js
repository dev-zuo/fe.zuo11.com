(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{440:function(t,s,n){"use strict";n.r(s);var a=n(27),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_16-dom2-和-dom3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-dom2-和-dom3"}},[t._v("#")]),t._v(" 16. DOM2 和 DOM3")]),t._v(" "),n("p",[t._v("DOM1（DOM Level 1）主要定义了 HTML 和 XML 文档的底层结构。DOM2（DOM Level 2）和 DOM3 级则在这些结构的基础上加入了更多的交互能力，支持更高级的 XML 特性。DOM2 和 DOM3 是按照模块化的思路来定制标准的，每个模块之间有一定关联，但分别针对某个 DOM 子集，这些模式如下：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("DOM Core")]),t._v(" 在 DOM1 核心部分的基础上，为节点添加方法和属性")]),t._v(" "),n("li",[n("code",[t._v("DOM Views")]),t._v(" 为文档定义了基于样式信息的不同视图")]),t._v(" "),n("li",[n("code",[t._v("DOM Events")]),t._v(" 定义通过事件实现 DOM 文档交互")]),t._v(" "),n("li",[n("code",[t._v("DOM style")]),t._v(" 定义了如何以编程的方式来访问和改变 CSS 样式")]),t._v(" "),n("li",[n("code",[t._v("DOM Traveral and Range")]),t._v(" 新增遍历 DOM 文档和选择文档内容的接口")]),t._v(" "),n("li",[n("code",[t._v("DOM HTML")]),t._v(" 在 DOM1 HTML 部分的基础上，增加属性、方法和新接口")]),t._v(" "),n("li",[n("code",[t._v("DOM Mutation Observers")]),t._v(" 定义基于 DOM 变化触发回调的接口，这个模块是 DOM4 模块，用于取代 Mutation Events")])]),t._v(" "),n("h2",{attrs:{id:"dom-的变化-演进"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-的变化-演进"}},[t._v("#")]),t._v(" DOM 的变化/演进")]),t._v(" "),n("p",[t._v("DOM2 和 DOM3 Core 模块的目的在于扩展 DOM API，以满足操作 XML 的所有需求，并提供更好的错误处理及特性检测能力。确定浏览器是否支持某些DOM 模块，返回 true，则支持，否则表示不支持")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第四版已删除下面的例子")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTML'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Views'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'XML'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CSS2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"针对-xml-命名空间的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#针对-xml-命名空间的变化"}},[t._v("#")]),t._v(" 针对 XML 命名空间的变化")]),t._v(" "),n("p",[t._v("针对 XML 命名空间的变化(p461), createElementNS()，createElementNS() 等，一般尾部带有 NS 的，基本就是命名空间相关的。")]),t._v(" "),n("h3",{attrs:{id:"其他方面的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他方面的变化"}},[t._v("#")]),t._v(" 其他方面的变化")]),t._v(" "),n("p",[t._v("除了命名空间相关的变化，DOM2 Core 还对 DOM 的其他部分做了一些更新。主要关注 DOM API 的完整性与可靠性。")]),t._v(" "),n("h4",{attrs:{id:"documenttype-类型的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documenttype-类型的变化"}},[t._v("#")]),t._v(" DocumentType 类型的变化")]),t._v(" "),n("p",[t._v("DocumentType 类型（document.doctype）新增了三个属性： publicId, systemId, internalSubset。一般 HTML 文档中几乎不会涉及文档类型的内部子集，XML 文档中稍微多一点。")]),t._v(" "),n("h4",{attrs:{id:"document-类型变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#document-类型变化"}},[t._v("#")]),t._v(" Document 类型变化")]),t._v(" "),n("ul",[n("li",[t._v("新增 importNode() 方法，类似 cloneNode()，用于复制节点。多用于 XML 文档")]),t._v(" "),n("li",[t._v("DOM2 View 为 Document 新增 defaultView 属性，指向当前的 window。")]),t._v(" "),n("li",[t._v("DOM2 Core 为 document.implementation 对象新增了 createDocumentType(), createDocument() 用于创建文档类型、文档节点。主要是 XML 使用。")]),t._v(" "),n("li",[t._v("DOM2 HTML 为 document.implementation 对象新增了 createHTMLDocument(title) 方法，用于创建 HTML 文档")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("importNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入节点以及其所有子节点")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("importNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅复制本节点，不包含子节点")]),t._v("\n\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultView "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" window "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 title 为 'new Doc' 的 HTML 文档(document)")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHTMLDocument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new Doc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h4",{attrs:{id:"node-的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-的变化"}},[t._v("#")]),t._v(" Node 的变化")]),t._v(" "),n("p",[t._v("DOM3 新增两个用于比较节点的方法：")]),t._v(" "),n("ul",[n("li",[t._v("isSameNode() A.isSameNode(B)，两节点是否引用的是同一个对象。")]),t._v(" "),n("li",[t._v("isEqualNode() A.isEqualNode(B) 两节点是否有相同的类型、相同的属性等。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" div1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'box'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" div2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'box'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndiv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSameNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ndiv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSameNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\ndiv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("p",[t._v("DOM3 增加了给 DOM 节点附加额外数据的方法：setUserData(key, value, handlerFunc) 在 HTML 中已过时，浏览器不支持，参考："),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Node/setUserData",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.setUserData() | MDN"),n("OutboundLink")],1)]),t._v(" "),n("h4",{attrs:{id:"框架-内嵌窗格-的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#框架-内嵌窗格-的变化"}},[t._v("#")]),t._v(" 框架(内嵌窗格)的变化")]),t._v(" "),n("p",[t._v("框架和内嵌框架分别用 HTMLFrameElement 和 HTMLIFrameElement(iframe) 表示。DOM2 HTML 为 HTMLIFrameElement 中新增了一个属性 contentDocument, 指向框架内容的文档对象。contentWindow 返回对应 iframe 的 window。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iframe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myIframe"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iframeDoc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iframe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentDocument "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" iframe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document\n")])])]),n("h2",{attrs:{id:"样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#样式"}},[t._v("#")]),t._v(" 样式")]),t._v(" "),n("p",[t._v("HTML 中的样式有 3 种定义方式：外部样式表("),n("code",[t._v("使用<link>导入")]),t._v(")、文档样式表("),n("code",[t._v("使用<style>元素")]),t._v(")、元素特定样式("),n("code",[t._v("使用 style 属性")]),t._v(")。DOM2 Style 为这 3 种应用样式的机制，都提供了 API。")]),t._v(" "),n("h3",{attrs:{id:"存取-访问和设置-元素样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#存取-访问和设置-元素样式"}},[t._v("#")]),t._v(" 存取(访问和设置)元素样式")]),t._v(" "),n("p",[t._v("JS 可以通过 element.style 访问和设置 通过 style 属性为 element(对应元素) 设置的 css 样式。")]),t._v(" "),n("ul",[n("li",[t._v("style 属性是 CSSStyleDeclaration 类型的实例。通过 style 获取的样式不包含通过层叠机制从文档样式或外部样式继承来的样式。")]),t._v(" "),n("li",[t._v("css 属性在 JS style 中都有对应的属性，css 属性名使用连字符（font-family），在 JS 中需要转为驼峰大小写形式（fontFamily）")]),t._v(" "),n("li",[t._v("在使用 style 设置尺寸时，都需要包含单位。标准模式下，style.width 设置为 20，会导致被忽略，因为没有度量单位。混杂模式下是可以的，但为了兼容，建议都加上单位。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDiv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'200px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不加单位可能会被忽略 200")]),t._v("\n\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("border "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px solid black'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "background-color: red; width: 100px; height: 200px; border: 1px solid black;"')]),t._v("\n")])])]),n("p",[t._v("DOM2 Style 规范在 style 对象上定义了一些属性和方法。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("cssText")]),t._v(" 获取元素 style 属性中的 CSS 代码")]),t._v(" "),n("li",[n("code",[t._v("length")]),t._v(" 获取元素 style 属性中的 css 属性数量。无法写，赋值会无效")]),t._v(" "),n("li",[t._v("`parentRule，表示 CSS 信息的 CSSRule 对象")]),t._v(" "),n("li",[n("code",[t._v("getPropertyPriority(prop)")]),t._v(" 获取 css 属性的优先级，如果是 "),n("code",[t._v("!important")]),t._v(' 返回 "important" ，否则返回 ""')]),t._v(" "),n("li",[n("code",[t._v("getProperyValue(prop)")]),t._v(" 获取 css 属性的值")]),t._v(" "),n("li",[n("code",[t._v("item(index)")]),t._v(" 获取索引为 index 的 CSS属性名，"),n("code",[t._v("element.style.item(index)")]),t._v(" 等价于 "),n("code",[t._v("element.style[index]")])]),t._v(" "),n("li",[n("code",[t._v("setProperty(prop, value, priority)")]),t._v(' 设置 css 属性，priority 为优先级，"important" 或 ""')]),t._v(" "),n("li",[n("code",[t._v("removeProperty(prop)")]),t._v(" 移除css属性")])]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style"}},[n("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#normal-div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("inner-div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("29px")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t内联样式div\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("normal-div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("正常样式"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}},[n("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" innerDiv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inner-div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" normalDiv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'normal-div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "color: red; width: 100px; height: 200px; font-size: 29px;"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("normalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\tnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color:white'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置内联样式")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("normalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" innerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" propertyName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" innerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 innerDiv.style.item(i), color、width、height")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propertyName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" innerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// color")]),t._v("\n\tinnerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red"')]),t._v("\n\tinnerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\t\n\tnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// normalDiV.style.cssText  // "color: white"')]),t._v("\n\tnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'font-size'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"important"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "color: white; font-size: 20px !important;"')]),t._v("\n\tnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'font-size'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "important"')]),t._v("\n\tnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除对应的css属性")]),t._v("\n")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h4",{attrs:{id:"访问层叠规则计算后的样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问层叠规则计算后的样式"}},[t._v("#")]),t._v(" 访问层叠规则计算后的样式")]),t._v(" "),n("p",[t._v("由于 style 对象只是读取的元素通过 style 属性设置的样式，不包含从其他样式表层叠继承的样式信息。DOM2 Style 在 document.defaultView 上新增了 "),n("code",[t._v("getComputedStyle(元素, 伪元素字符串)")]),t._v(" 方法来获取包含元素计算后的样式，它也是 CSSStyleDeclaration 类型的实例。")]),t._v(" "),n("p",[t._v('document.defaultView.getComputedStyle(element, null)，第二个参数是伪元素字符串如":after", 如果不需要，就传null')]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" innerDiv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inner-div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" normalDiv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'normal-div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnormalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" computedStyle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("normalDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \ninnerDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\ncomputedStyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有的浏览器是 rgb(0,0,255) 有的是 #0000ff")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"操作样式表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作样式表"}},[t._v("#")]),t._v(" 操作样式表")]),t._v(" "),n("blockquote",[n("p",[t._v("可以获取、操作 "),n("code",[t._v("<style>")]),t._v(" 元素和 "),n("code",[t._v("<link>")]),t._v(" 元素导入的样式信息，他们里面的每一行样式信息都是一条 CSS 规则，可以进行读取和设置")])]),t._v(" "),n("p",[t._v("CSSStyleSheet 类型表示 CSS 样式表，包括使用 "),n("code",[t._v("<link>")]),t._v(" 元素和 "),n("code",[t._v("<style>")]),t._v(" 元素定义的样式表。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<link>")]),t._v(" 元素本身是 HTMLLinkElement")]),t._v(" "),n("li",[n("code",[t._v("<style>")]),t._v(" 元素本身是 HTMLStyleElement")]),t._v(" "),n("li",[n("code",[t._v("CSSStyleSheet")]),t._v(" 是一个通用的样式表类型，可以表示在 "),n("code",[t._v("<link>")]),t._v(" 和 "),n("code",[t._v("<style>")]),t._v(" 两个 HTML 元素定义的样式")]),t._v(" "),n("li",[n("code",[t._v("document.styleSheets")]),t._v(" 类型是 StyleSheetList 类数组对象。每一个子项都是 CSSStyleSheet 类型。表示文档中可用的 "),n("code",[t._v("<style>")]),t._v("、以及 rel 属性为 'stylesheet' 的 "),n("code",[t._v("<link>")]),t._v(" 元素样式表集合。")]),t._v(" "),n("li",[t._v("CSSStyleSheet 从 StyleSheet 类型继承了如下属性，除了 disabled 可以写，其他都只读。\n"),n("ul",[n("li",[n("code",[t._v("disabled")]),t._v(", 布尔值，是否禁用样式表，默认为 false")]),t._v(" "),n("li",[n("code",[t._v("href")]),t._v("，如果是 "),n("code",[t._v("<link>")]),t._v(" 样式表，返回样式表的 URL，如果是 "),n("code",[t._v("<style>")]),t._v(" 样式表，返回 null")]),t._v(" "),n("li",[n("code",[t._v("type")]),t._v(': "text/css"')]),t._v(" "),n("li",[n("code",[t._v("ownerNode")]),t._v("，一般为 'style' 或 'link'，如果当前样式表是通过 "),n("code",[t._v("@import")]),t._v(" 被包含在另一个样式表中，则这个属性值为 null")]),t._v(" "),n("li",[n("code",[t._v("title")]),t._v("，ownerNode 的 title 属性")]),t._v(" "),n("li",[n("code",[t._v("parentStyleSheet")]),t._v(" 如果样式表是通过 "),n("code",[t._v("@import")]),t._v(" 导入的，则这个属性指向导入它的样式表。")])])]),t._v(" "),n("li",[t._v("CSSStyleSheet 还支持如下属性\n"),n("ul",[n("li",[n("code",[t._v("cssRules")]),t._v(" 当前样式表包含的样式规则集合，CSSRuleList (CSSStyleRule 对象数组)。如果 cssRules 不支持，就取 rules 属性值。")]),t._v(" "),n("li",[n("code",[t._v("ownerRule")]),t._v(" 如果样式表是 "),n("code",[t._v("@import")]),t._v(" 导入，则指向导入的那一行规则，否则为 null")]),t._v(" "),n("li",[n("code",[t._v("deleteRule(index)")]),t._v(" 删除 cssRules 中索引为 index 的样式规则")]),t._v(" "),n("li",[n("code",[t._v("insertRule(rule, index)")]),t._v(" 在指定位置向 cssRules 中插入规则")])])]),t._v(" "),n("li",[t._v("CSSRule 表示样式表中的一条规则，CSSStyleRule 继承自它，表示样式信息，CSSStyleRule 有如下属性\n"),n("ul",[n("li",[n("code",[t._v("cssText")]),t._v(" 返回整条规则文本")]),t._v(" "),n("li",[n("code",[t._v("parentRule")]),t._v(" 如果这条规则被其他规则（如 "),n("code",[t._v("@media")]),t._v("）包含，则指向包含的规则，否则为 null")]),t._v(" "),n("li",[n("code",[t._v("parentStyleSheet")]),t._v(" 包含当前规则的样式表")]),t._v(" "),n("li",[n("code",[t._v("selectorText")]),t._v(" 返回规则的选择符文本")]),t._v(" "),n("li",[n("code",[t._v("style")]),t._v(" 返回 CSSStyleDeclaration 对象，可以设置获取当前规则中的样式")]),t._v(" "),n("li",[n("code",[t._v("type")]),t._v(" 数值常量，表示规则类型。对于样式规则，它始终为 1。")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// StyleSheetList { 0: CSSStyleSheet, 1: CSSStyleSheet, ... }")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CSSRuleList (CSSStyleRule 对象数组) ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录了 css 文件或 style 标签里的样式信息 List")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CSSStyleRule 对象，每一条记录，可以通过.selectorText和.cssText 获取到对应的选择器和样式信息")]),t._v("\n")])])]),n("p",[t._v("操作规则（获取、新增、删除）示例：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nstyle例子：\n<style>\n  #normal-div {\n    color: blue;\n    background-color: #f00;\n    display:block;\n  }\n  div.box {\n    width: 100px;\n    height: 200px;\n    background-color: blue;\n  }\n</style>\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.获取 <style> 里的样式信息CSSRule")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sheet "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sheet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" sheet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取第一个<style>里的样式信息")]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2   ，分别为 #normal-div 及 div.box 的相关样式")]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectorText "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "#normal-div"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "#normal-div { color: blue; background-color: rgb(255, 0, 0); display: block; }"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  "color: blue; background-color: rgb(255, 0, 0); display: block;"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "blue"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以直接设置样式")]),t._v("\n\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectorText "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "div.box"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "div.box { width: 100px; height: 200px; background-color: blue; }"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "width: 100px; height: 200px; background-color: blue;"')]),t._v("\nrules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "100px"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 创建CSSRule")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sheet "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sheet.insertRule(cssText, pos)")]),t._v("\nsheet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body {background-color: yellow;}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面被改为yellow背景")]),t._v("\nsheet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 移除CSSRule")]),t._v("\nsheet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteRule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除一个rules里面的规则")]),t._v("\n")])])]),n("p",[t._v("一般 Web 开发中很少用到上面的方法。更多的方法是使用 14 章介绍的动态样式加载技术。")]),t._v(" "),n("h3",{attrs:{id:"元素尺寸-元素大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元素尺寸-元素大小"}},[t._v("#")]),t._v(" 元素尺寸/元素大小")]),t._v(" "),n("p",[t._v("下面介绍的属性和方法并不是 DOM2 Style 规范中定义的，但与 HTML 元素的样式有关。DOM 一直缺乏页面中元素实际尺寸的规范。IE 率先增加了一些属性，向开发者暴露元素尺寸信息，这些属性现在已经得到所有主流浏览器支持。")]),t._v(" "),n("p",[t._v("元素从内到外：元素内容 - 内边距(padding) - 边框(boder) - 外边距(margin)")]),t._v(" "),n("h4",{attrs:{id:"元素偏移量-偏移尺寸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元素偏移量-偏移尺寸"}},[t._v("#")]),t._v(" 元素偏移量/偏移尺寸")]),t._v(" "),n("ul",[n("li",[t._v("element.offsetHeight  元素内容 + 内边距(padding) + 边框(border)")]),t._v(" "),n("li",[t._v("element.offsetWidth   元素内容 + 内边距(padding) + 边框(border)")]),t._v(" "),n("li",[t._v("element.offsetTop     元素边框到父元素边框顶部之间的距离")]),t._v(" "),n("li",[t._v("element.offsetLeft    元素边框到父元素边框左侧部之间的距离")]),t._v(" "),n("li",[t._v("element.offsetLeft 与 element.offsetTop 都是相对于父元素的。真实的偏移量，要加上 element.offsetParent")])]),t._v(" "),n("p",[t._v("这些偏移尺寸属性都是只读的，每次访问都会重新计算。使用时可以把该值放在一个局部变量中，避免影响性能。")]),t._v(" "),n("h4",{attrs:{id:"元素客户端尺寸-client-dimensions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元素客户端尺寸-client-dimensions"}},[t._v("#")]),t._v(" 元素客户端尺寸(client dimensions)")]),t._v(" "),n("p",[t._v("元素客户端尺寸就是"),n("strong",[t._v("元素内部的空间")]),t._v("。不包含border，margin，滚动条占用的空间。")]),t._v(" "),n("ul",[n("li",[t._v("element.clientHeight  元素内容 + 内边距")]),t._v(" "),n("li",[t._v("element.clientWidth   元素内容 + 内边距")])]),t._v(" "),n("h4",{attrs:{id:"滚动大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#滚动大小"}},[t._v("#")]),t._v(" 滚动大小")]),t._v(" "),n("ul",[n("li",[t._v("element.scrollHeight  元素整个区域的高度")]),t._v(" "),n("li",[t._v("element.scrollWidth  整个区域的宽度")]),t._v(" "),n("li",[t._v("element.scrollLeft 被隐藏区域左侧的像素宽度")]),t._v(" "),n("li",[t._v("element.scrollTop  被隐藏区域顶部的像素高度")])]),t._v(" "),n("p",[t._v("结合滚动事件监听可以做一个页面百分比显示模块，scrollWidth 和 scrollHeight 可以用来确定元素内容的实际尺寸。clientWith 和 clientHeight 是视口的大小，不包含滚动区域。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// demo")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <div id="inner-div" style="height: 100px;overflow:scroll;color:red;width:100px;height: 200px;font-size:29px;margin:10px;padding:20px;border:2px solid #ccc;">')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </div>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inner-div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetHeight "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 144 边框(border) + 内边距(padding) + 元素height")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 144 边框(border) + 内边距(padding) + 元素width")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetLeft "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 距离左边的距离")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 距离顶部的距离")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clientWidth 内边距(padding) + 元素width")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clientHeight 内边距(padding) + 元素height")]),t._v("\n\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollHeight "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 703  实际可见为100左右")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollTop "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 改变该参数，可以设置滚动位置")]),t._v("\n\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollWidth "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 横向滚动相关")]),t._v("\nk2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollLeft  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以设置横向滚动位置")]),t._v("\n")])])]),n("h4",{attrs:{id:"确定元素尺寸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#确定元素尺寸"}},[t._v("#")]),t._v(" 确定元素尺寸")]),t._v(" "),n("p",[t._v("element.getBoundingClientRect()，返回一个 DOMRect 对象，包含 left、top、right、bottom、height、width 属性，给出了元素在页面中相对于视口的位置。其中 e.right = e.left + e.width，e.bottom = e.top + e.height")]),t._v(" "),n("h2",{attrs:{id:"dom-遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-遍历"}},[t._v("#")]),t._v(" DOM 遍历")]),t._v(" "),n("p",[t._v("DOM2 Traversal and Range 模块，定义了两个类型用于辅助顺序遍历 DOM 结构：NodeIterator, TreeWalker。他们可以从某个起点开始执行对 DOM 结构的优先遍历。")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token doctype"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),n("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Example"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" world!"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("sss\n")])])]),n("p",[t._v("遍历节点顺序：")]),t._v(" "),n("p",[n("img",{attrs:{src:"/images/js/domIterator.png",alt:"DOM Iterator"}})]),t._v(" "),n("h3",{attrs:{id:"nodeiterator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodeiterator"}},[t._v("#")]),t._v(" NodeIterator")]),t._v(" "),n("p",[t._v("NodeIterator 节点遍历器，可以通过 document.createNodeIterator() 方法创建 NodeIterator 实列，然后用nextNode(), previousNode()，访问前一个节点，或后一个节点。")]),t._v(" "),n("p",[t._v("document.createNodeIterator(root, whatToShow, filter, entityReferenceExpansion)")]),t._v(" "),n("ul",[n("li",[t._v("root 作为 DOM 树中搜索起点的元素节点")]),t._v(" "),n("li",[t._v("whatToShow 可选，表示需要访问哪些节点？可以过滤节点，可选值值如下：除了 SHOW_ALL，其他的可以用 | 来组合多个\n"),n("ul",[n("li",[t._v("NodeFilter.SHOW_ALL: 显示所有类型的节点")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_ELEMENT：显示元素节点")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_ATTRIBUTE 属性节点，由于 DOM 的结构，实际用不上")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_TEXT：显示文本节点")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_COMMENT：显示注释节点")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_DOCUMENT：显示文档节点")]),t._v(" "),n("li",[t._v("NodeFilter.SHOW_DOCUMENT_TYPE：显示文档类型节点")]),t._v(" "),n("li",[t._v("...")])])]),t._v(" "),n("li",[t._v("filter 可选, 一个 NodeFilter 对象或函数，表示是否接收或跳过特定节点")]),t._v(" "),n("li",[t._v("entiryReferenceExpansion 可选, 布尔值，是否要扩展实体引用，在 HTML 文档中没效果。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNodeIterator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二个字段等同于 NodeFilter.SHOW_ALL")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("nodeType: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeValue: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", tagName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有节点，包含doctype、回车空的textNode")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 9, nodeName: #document, nodeValue: null, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 10, nodeName: html, nodeValue: null, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HTML, nodeValue: null, tagName: HTML")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HEAD, nodeValue: null, tagName: HEAD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t\t, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: META, nodeValue: null, tagName: META")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t\t, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: TITLE, nodeValue: null, tagName: TITLE")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: Example, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: BODY, nodeValue: null, tagName: BODY")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t\t, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: P, nodeValue: null, tagName: P")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: B, nodeValue: null, tagName: B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: Hello, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue:  world!, tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// , tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),n("p",[t._v("使用 filter 参数过滤节点，该参数可以使一个 NodeFilter 对象，对象只有一个 acceptNode() 方法，如果要跳过该节点，返回 NodeFilter.FILTER_SKIP，否则返回 NodeFilter.FILTER_ACCEPT。filter 参数也可以使与 acceptNode 形式一样的函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" filter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("acceptNode")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是空的文本节点，过滤掉")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILTER_SKIP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳过该节点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILTER_ACCEPT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let filter = function(node) {")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \tif (node.nodeType === 3 && node.nodeValue.trim() === '') {")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t\treturn NodeFilter.FILTER_SKIP; // 跳过该节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t} else {")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t\treturn NodeFilter.FILTER_ACCEPT;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// } ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNodeIterator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHOW_ELEMENT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHOW_TEXT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只显示元素节点和文本节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个nextNode() 会返回根节点。遍历到最后一个节点，会是null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("nodeType: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeValue: '")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', tagName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HTML, nodeValue: 'null', tagName: HTML")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HEAD, nodeValue: 'null', tagName: HEAD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: META, nodeValue: 'null', tagName: META")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: TITLE, nodeValue: 'null', tagName: TITLE")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: 'Example', tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: BODY, nodeValue: 'null', tagName: BODY")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: P, nodeValue: 'null', tagName: P")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: B, nodeValue: 'null', tagName: B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: 'Hello', tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 3, nodeName: #text, nodeValue: ' world!', tagName: undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNodeIterator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHOW_ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只显示元素节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个nextNode() 会返回根节点。遍历到最后一个节点，会是null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("nodeType: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeValue: '")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', tagName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HTML, nodeValue: 'null', tagName: HTML")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HEAD, nodeValue: 'null', tagName: HEAD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: META, nodeValue: 'null', tagName: META")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: TITLE, nodeValue: 'null', tagName: TITLE")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: BODY, nodeValue: 'null', tagName: BODY")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: P, nodeValue: 'null', tagName: P")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: B, nodeValue: 'null', tagName: B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"treewalker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#treewalker"}},[t._v("#")]),t._v(" TreeWalker")]),t._v(" "),n("p",[t._v("TreeWalker，是 NodeIterator 的一个更高级的版本，支持 parentNode(), firstChild(), lastChild(), nextSibling(), previousSibling()，可以用 document.createTreewalker() 方法创建 TreeWalker 实例。参数和 document.createNodeIterator() 一致")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TreeWalker 里面的 filter 新增 NodeFilter.FILTER_REJECT 参数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NodeFilter.FILTER_SKIP  跳过节点，到子树的下一个节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NodeFilter.FILTER_REJECT 跳过节点及该节点的整个子树")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NodeFilter.FILTER_ACCEPT 不过滤节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" walker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTreeWalker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SHOW_ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" walker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个nextNode() 会返回根节点。遍历到最后一个节点，会是null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("nodeType: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeType"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v(", nodeValue: '")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', tagName: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" walker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HTML, nodeValue: 'null', tagName: HTML")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: HEAD, nodeValue: 'null', tagName: HEAD")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: META, nodeValue: 'null', tagName: META")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: TITLE, nodeValue: 'null', tagName: TITLE")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: BODY, nodeValue: 'null', tagName: BODY")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: P, nodeValue: 'null', tagName: P")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nodeType: 1, nodeName: B, nodeValue: 'null', tagName: B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// walker.firstChild()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// walker.nextSibling()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// walker.currentNode // 当前节点，给该节点赋值，可以改变起点。")]),t._v("\n")])])]),n("p",[t._v("更多详情，参考 p482，相关文章："),n("a",{attrs:{href:"https://www.cnblogs.com/venoral/archive/2016/05/16/5499358.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("玩转DOM遍历——用NodeIterator实现getElementById，getElementsByTagName方法 - venoral - 博客园"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"范围-range"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#范围-range"}},[t._v("#")]),t._v(" 范围(range)")]),t._v(" "),n("p",[t._v("为了支持对页面更细致的控制，DOM2 Tarversal and Range 模块定义了范围接口。范围可用于在文档中选择内容，而不用考虑节点之间的界限。在 DOM 操作的粒度不够时可以使用。document.createRange() 方法用于创建一个 DOM 范围对象，类型为 Range，包含如下属性")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("startContainer")]),t._v(" 范围起点所在的节点，即选区中的第一个节点的父节点。")]),t._v(" "),n("li",[n("code",[t._v("startOffset")]),t._v(" 范围起点在 startContainer 中的偏移量。如果 startContainer 是文本节点、注释节点或CData区块节点，startOffset 表示跳过的字符数, 否则表示范围中第一个节点的索引。")]),t._v(" "),n("li",[n("code",[t._v("endContainer")]),t._v(" 范围重点所在的节点，即选区中最后一个子节点的父节点")]),t._v(" "),n("li",[n("code",[t._v("endOffset")]),t._v(" 范围起点在 startContainer 中的偏移量（与 startOffset 中偏移量的含义相同）")]),t._v(" "),n("li",[n("code",[t._v("commonAncestorContainer")]),t._v("， 祖先节点，文档中以 startContainer 和 endContainer 为后代的最深的节点。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startContainer "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #document")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startContainer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" document "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endContainer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" document "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("h3",{attrs:{id:"简单选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单选择"}},[t._v("#")]),t._v(" 简单选择")]),t._v(" "),n("p",[t._v("通过范围选择文档中某个部分最简单的方式是使用 selectNode() 和 selectNodeContents()。两个方法都接收一个节点作为参数，并将该节点的信息调价到调用它的范围。更多细节参考 p483")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   <p id="p1"><b>Hello</b> world!</p>')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </body>")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nrange1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// range1 包含 <p id="p1"><b>Hello</b> world!</p>')]),t._v("\nrange2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectNodeContents")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// range2 包含 <b>Hello</b> world!")]),t._v("\n")])])]),n("h3",{attrs:{id:"复杂选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复杂选择"}},[t._v("#")]),t._v(" 复杂选择")]),t._v(" "),n("p",[t._v("setStart()、setEnd() 两个方法可以创建更复杂的范围。它们都接收两个参数：参照节点和偏移量。如果是 setStart() 参照节点会成为 startContainer，偏移量赋值给 startOffset。对于 startEnd() 参照节点会成为 endContainer，偏移量会赋值给 endOffset。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   <p id="p1"><b>Hello</b> world!</p>')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    helloNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello"')]),t._v("\n    worldNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " world!" textNode')]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// range "llo</b> wo"')]),t._v("\n")])])]),n("h3",{attrs:{id:"操作范围"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作范围"}},[t._v("#")]),t._v(" 操作范围")]),t._v(" "),n("p",[t._v("操作 DOM 范围中的内容")]),t._v(" "),n("ul",[n("li",[t._v("range.deleteContents() 删除范围中的内容")]),t._v(" "),n("li",[t._v("range.extractContents() 删除范围中的文本内容，并返回对应的文档片段 nodeType 为 11，DocumentFragment")]),t._v(" "),n("li",[t._v("range.cloneContents() 如果不想把范围中文档中删除，可以使用 cloneContents() 复制文档片段")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   <p id="p1"><b>Hello</b> world!</p>')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 删除范围中的文本内容 deleteContents()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    helloNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n    worldNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " world!" textNode')]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// range   "llo</b> wo"')]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteContents")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <p id="p1"><b>He</b>rld!</p>')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 删除范围中的文本内容，并返回对应的文档片段 extractContents()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    helloNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n    worldNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " world!" textNode')]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// range   "llo</b> wo"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fragment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractContents")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <body>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// \t<p id="p1"><b>He</b>rld!</p>\t')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t<b>llo</b> wo")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// </body>")]),t._v("\n")])])]),n("h3",{attrs:{id:"范围插入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#范围插入"}},[t._v("#")]),t._v(" 范围插入")]),t._v(" "),n("p",[t._v("向 DOM 范围中插入内容")]),t._v(" "),n("ul",[n("li",[t._v("range.insertNode(元素内容) 在 range 中插入内容")]),t._v(" "),n("li",[t._v("range.surroundContents(元素) 提取 range 中的内容，用对应的元素节点包裹，再插入对应的位置")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. range.insertNode(), 在 range 中插入内容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    helloNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n    worldNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " world!" textNode')]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worldNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// range "llo</b> wo"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" span "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nspan"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nspan"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Inserted text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <p id="p1"><b>He  插入到这里  llo</b> world!</p>')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html 内容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <p id="p1"><b>He<span style="color:red">Inserted text</span>llo</b> world!</p>')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. range.surroundContents(), 提取range中的内容，用对应的元素节点包裹，再插入对应的位置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    helloNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n    worldNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " world!" textNode    ')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" range "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("helloNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" span "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nspan"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("surroundContents")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <p id="p1"><b><span style="background-color:yellow">Hello</span></b> world!</p>')]),t._v("\n")])])]),n("h3",{attrs:{id:"范围折叠-比较-复制-清理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#范围折叠-比较-复制-清理"}},[t._v("#")]),t._v(" 范围折叠/比较/复制/清理")]),t._v(" "),n("p",[n("strong",[t._v("范围折叠")]),t._v(" 如果范围没有选择文档的任何部分，则称为折叠(collapsed)。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("collapse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 折叠到起点位置")]),t._v("\nrange"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("collapse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 折叠到结束位置")]),t._v("\n")])])]),n("p",[n("strong",[t._v("范围比较")]),t._v("，比较 DOM 范围 range1.compareBoundaryPoints(比较方式常量, range2)。比较方式常量值，可选如下，如果相等，返回 0，range1 的点位于 range2 的点之前，返回 -1， 如果在之后，返回 1")]),t._v(" "),n("ul",[n("li",[t._v("Range.START_TO_START(0) 比较 range1 和 range2 的起点")]),t._v(" "),n("li",[t._v("Range.START_TO_END(1) 比较 range1 的起点和 range2 的终点")]),t._v(" "),n("li",[t._v("Range.END_TO_END(2) 比较 range1 和 range2 的终点")]),t._v(" "),n("li",[t._v("Range.END_TO_START(3) 比较 range1 的终点和 range2 的起点")])]),t._v(" "),n("p",[n("strong",[t._v("复制 DOM 范围")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newRange "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneRange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("清理 DOM 范围")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("detach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从文档中分离")]),t._v("\nrange "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解除引用")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);