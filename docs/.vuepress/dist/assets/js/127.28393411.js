(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{564:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-基础"}},[t._v("#")]),t._v(" Docker 基础")]),t._v(" "),a("blockquote",[a("p",[t._v("Docker is an open platform for developing, shipping, and running applications.")])]),t._v(" "),a("p",[t._v("Docker是一个用于开发、发布和运行应用程序的开放平台。也可以简单的理解为 Docker 是一个可以部署、运行项目的容器。")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://docs.docker.com/get-started/overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker overview"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"容器、操作系统级虚拟化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器、操作系统级虚拟化"}},[t._v("#")]),t._v(" 容器、操作系统级虚拟化")]),t._v(" "),a("p",[t._v("Docker 是基于 Linux 的高效、敏捷、轻量级的容器（轻量虚拟）方案。它的特点：高效的利用系统资源、快速的启动时间、一致的运行环境、持续交付和部署、更轻松的迁移。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("虚拟化技术")]),t._v(" "),a("th",[t._v("代表")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("完全虚拟化")]),t._v(" "),a("td",[t._v("VMware Workstation、VirtualBox")])]),t._v(" "),a("tr",[a("td",[t._v("硬件辅助虚拟化")]),t._v(" "),a("td",[t._v("InterVT AMD-V")])]),t._v(" "),a("tr",[a("td",[t._v("超虚拟化")]),t._v(" "),a("td",[t._v("Xen")])]),t._v(" "),a("tr",[a("td",[t._v("操作系统级")]),t._v(" "),a("td",[t._v("Docker LXC容器")])])])]),t._v(" "),a("p",[t._v("Docker 对比传统虚拟机")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("特性")]),t._v(" "),a("th",[t._v("容器")]),t._v(" "),a("th",[t._v("虚拟机")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("启动")]),t._v(" "),a("td",[t._v("秒级")]),t._v(" "),a("td",[t._v("分钟级")])]),t._v(" "),a("tr",[a("td",[t._v("硬盘使用")]),t._v(" "),a("td",[t._v("一般为 MB")]),t._v(" "),a("td",[t._v("一般为 GB")])]),t._v(" "),a("tr",[a("td",[t._v("性能")]),t._v(" "),a("td",[t._v("接近原生")]),t._v(" "),a("td",[t._v("弱于原生")])]),t._v(" "),a("tr",[a("td",[t._v("系统支持量")]),t._v(" "),a("td",[t._v("单机支持上千个容器")]),t._v(" "),a("td",[t._v("一般几十个")])])])]),t._v(" "),a("h2",{attrs:{id:"docker安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[t._v("#")]),t._v(" Docker安装")]),t._v(" "),a("p",[t._v("这里主要介绍两种安装方式，一种是本地开发电脑 Mac 上的安装，一种是服务器 Ubuntu 上的安装")]),t._v(" "),a("h3",{attrs:{id:"mac本地安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac本地安装"}},[t._v("#")]),t._v(" Mac本地安装")]),t._v(" "),a("p",[t._v("到官方网站下载 "),a("a",{attrs:{href:"https://docs.docker.com/get-docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Desktop for Mac"),a("OutboundLink")],1),t._v(" 安装即可。安装完成后，命令行输入 docker，如果不是 command not found，就表示安装成功了。")]),t._v(" "),a("p",[t._v("在 docker 上运行一个 nginx 应用看看效果")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个 www 目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" www \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在该目录下创建一个 index.html 文件，内容为 hello docker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello docker"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" www/index.html\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 Docker 运行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里要用到 nginx，要先下载镜像到本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 防止 Unable to find image 'nginx:latest' locally")]),t._v("\ndocker pull nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地的 8000 端口，映射到容器的 80 端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前目录下的 www 目录，映射到容器 /usr/share/nginx/html 目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器里 nginx 服务端口为 80，默认目录为 /usr/share/nginx/html ")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(":80 -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v("/www:/usr/share/nginx/html nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run --help")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Usage：docker run [OPTIONS] IMAGE [COMMAND] [ARG...] ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Run a command in a new container")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -p, --publish list，Publish a container's port(s) to the host 将容器的端口发布到主机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -v, --volume list，Bind mount a volume 绑定挂载卷(可以简单理解为磁盘、分区)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $PWD 当前目录，nginx 为镜像")]),t._v("\n")])])]),a("p",[t._v("这样，通过 "),a("code",[t._v("http://127.0.0.1:8000")]),t._v(" 就可以看到 hello docker 了")]),t._v(" "),a("h3",{attrs:{id:"ubuntu服务器安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu服务器安装"}},[t._v("#")]),t._v(" Ubuntu服务器安装")]),t._v(" "),a("p",[t._v("下面使用一台全新的腾讯云 云服务器来尝试安装 Docker，系统为 Ubuntu Sever 18.04.1 LTS 64位。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录到远程服务器，我这里默认的用户是 unbuntu")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是 root 用户")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@xx.xx.xx.xx    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unbuntu 用户，执行命令时需要 sudo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" unbuntu@xx.xx.xx.xx \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apt升级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加相关软件包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\napt-transport-https "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nca-certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nsoftware-properties-common\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载软件包的合法性，需要添加软件源的 GPG 密钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# source.list 中添加 Docker 软件源")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\\n'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' \\\nstable"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 Docker CE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动 Docker CE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加docker服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start docker "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动docker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立 docker 用户组(可选，如果只有root用户，可以加一个) ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG docker "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试命令是否生效")]),t._v("\ndocker\n")])])]),a("h3",{attrs:{id:"镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[t._v("#")]),t._v(" 镜像加速")]),t._v(" "),a("p",[t._v("为了加快镜像下载速度，可以使用第三方镜像")]),t._v(" "),a("ul",[a("li",[t._v("阿里云加速器(需登录账号获取) 暂不推荐")]),t._v(" "),a("li",[t._v("Azure 中国镜像 https://dockerhub.azk8s.cn")]),t._v(" "),a("li",[t._v("七牛云加速器 https://reg-mirror.qiniu.com")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo vi /etc/docker/daemon.json ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://dockerhub.azk8s.cn"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://reg-mirror.qiniu.com"')]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启docker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart docker\n")])])]),a("h2",{attrs:{id:"运行简单nginx服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行简单nginx服务"}},[t._v("#")]),t._v(" 运行简单Nginx服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取官方镜像 - 面向docker的只读模板")]),t._v("\ndocker pull nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可能会等很久，下载慢")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看镜像")]),t._v("\ndocker images nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" www\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello docker!!'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" www/index.html\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# www目录里面放一个index.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -p 端口映射 8000:80 ，将服务器的8000端口，映射到docker虚拟机里nginx服务的80端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $PWD/www 当前目录下的www，: 映射到 nginx 默认的路径下，使用镜像名字为 nginx")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(":80 -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v("/www:/usr/share/nginx/html nginx  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后台启动")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -d 以 daemon 后台守护进程执行，返回 uuid")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PWD")]),t._v("/www:/usr/share/nginx/html -d nginx \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看运行中的容器，如果要查看全部加 -a，容器id的前3位就可以操作该容器。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List containers，-a Show all containers (default shows just running)")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止")]),t._v("\ndocker stop ff6\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启")]),t._v("\ndocker start ff6\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入docker内部伪终端，可以看容器内部文件系统")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it ff6 /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除镜像")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" ff6\n")])])]),a("h2",{attrs:{id:"docker运行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker运行过程"}},[t._v("#")]),t._v(" Docker运行过程")]),t._v(" "),a("p",[t._v("基本概念")]),t._v(" "),a("ul",[a("li",[t._v("镜像（Image），面向Docker的只读模板，其中包含创建Docker容器的说明。An image is a read-only template with instructions for creating a Docker container.")]),t._v(" "),a("li",[t._v("容器（Container），镜像的运行实例。A container is a runnable instance of an image.")]),t._v(" "),a("li",[t._v("仓库 (Registry)，存储镜像的服务器")])]),t._v(" "),a("p",[t._v("命令运行过程，如下图")]),t._v(" "),a("ul",[a("li",[t._v("运行 docker pull，从镜像服务器拉取镜像到本地")]),t._v(" "),a("li",[t._v("运行 docker run，将镜像实例化，放到容器列表列执行")]),t._v(" "),a("li",[t._v("运行 docker build，创建一个镜像")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/docker_architecture.svg",alt:"docker_architecture"}})]),t._v(" "),a("h2",{attrs:{id:"dockerfile-定制镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-定制镜像"}},[t._v("#")]),t._v(" Dockerfile 定制镜像")]),t._v(" "),a("blockquote",[a("p",[t._v("To build your own image, you create a Dockerfile with a simple syntax for defining the steps needed to create the image and run it. Each instruction in a Dockerfile creates a layer in the image. When you change the Dockerfile and rebuild the image, only those layers which have changed are rebuilt. This is part of what makes images so lightweight, small, and fast, when compared to other virtualization technologies.")])]),t._v(" "),a("p",[t._v("要构建自己的镜像，您可以使用简单的语法创建一个 Dockerfile 文件，用于定义创建镜像并运行它所需的步骤。 Dockerfile中的每条指令都会在映像中创建一个层。 当您更改 Dockerfile 并重新构建镜像时，仅重建那些已更改的层。 与其他虚拟化技术相比，这是使镜像如此轻量，小和快速的部分原因。")]),t._v(" "),a("p",[t._v("定制自己的web服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个测试的文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" my_nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 myNginx 下创建 Dockerfile 文件，并写入内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" my_nginx/Dockerfile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Dockerfile 内容，从 nginx 镜像开始，在nginx目录下新增一个页面")]),t._v("\nFROM nginx:latest\nRUN "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<h1>Hello, my_nginx!</h1>'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/share/nginx/html/index.html\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入 myNginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my_nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定制镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -t tag list，Name and optionally a tag in the 'name:tag' format")]),t._v("\ndocker build -t my_nginx:v1 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx定义镜像名，v1版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行镜像")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 my_nginx:v1\n")])])]),a("p",[t._v("这样访问 "),a("code",[t._v("127.0.0.1")]),t._v(" 就可以看到 Hello, my_nginx! 了")]),t._v(" "),a("h3",{attrs:{id:"定制-node-js-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制-node-js-镜像"}},[t._v("#")]),t._v(" 定制 Node.js 镜像")]),t._v(" "),a("p",[t._v("先创建一个新的 Node.js 项目，目录为 nodeapp")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 nodeapp，并初始化一个简单的项目")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" nodeapp\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" nodeapp\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init -y\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i koa -s\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" app.js\n")])])]),a("p",[t._v("app.js代码如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Koa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Koa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello Node.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app started at http://localhost:3000/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("为当前 Node.js 项目定制 Docker 镜像")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在当前目录创建Dockerfile")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" Dockerfile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Dockerfile 内容")]),t._v("\nFROM node:10-alpine\nADD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /app/\nWORKDIR /app\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("具体解释")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Dockerfile")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 制定node镜像的版本")]),t._v("\nFROM node:10-alpine\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动当前目录下面的文件到app目录下")]),t._v("\nADD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /app/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入到app目录下面，类似cd")]),t._v("\nWORKDIR /app\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对外暴露的端口")]),t._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 程序启动脚本")]),t._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("构建镜像并运行")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定制镜像")]),t._v("\ndocker build -t nodeapp:v1 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行，-d 后台运行Run container in background and print container ID")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 -d nodeapp:v1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回64位uuid 1f8c4b917efb92c313...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止服务")]),t._v("\ndocker stop 1f8\n")])])]),a("h3",{attrs:{id:"定制pm2镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制pm2镜像"}},[t._v("#")]),t._v(" 定制PM2镜像")]),t._v(" "),a("p",[t._v("PM2 - 利用多核资源")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .dockerignore")]),t._v("\nnode_modules\n")])])]),a("p",[t._v("pm2配置文件")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// process.yml")]),t._v("\napps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n  instances"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  watch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" production\n")])])]),a("p",[t._v("Dockerfile")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Dockerfile  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pm2在docker中使用命令为pm2-runtime")]),t._v("\nFROM keymetrics/pm2:latest-alpine\nWORKDIR /usr/src/app\nADD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /usr/src/app\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npm.taobao.org/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pm2-runtime"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"process.yml"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("定制镜像")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定制镜像")]),t._v("\ndocker build -t mypm2 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 -d mypm2\n")])])]),a("h2",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" docker-compose")]),t._v(" "),a("p",[t._v("Compose项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排，一次性可以启动多个镜像。")]),t._v(" "),a("p",[t._v("docker-compose：Define and run multi-container applications with Docker. 使用 Docker 定义或运行多个容器应用。")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu需要安装，Mac不需要")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-compose\n")])])]),a("p",[t._v("测试")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" helloworld\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" helloworld\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" docker-compose.yml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml 文件内容")]),t._v("\nversion: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\nservices:\n hello-world:\n  image: hello-world\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行 docker-compose  Create and start containers")]),t._v("\ndocker-compose up \n")])])]),a("p",[t._v("注意，如果是 ubuntu 服务器，会报 "),a("code",[t._v("Couldn't connect to Docker daemon at http+docker://localunixsocket - is it running?")]),t._v(" 的错误，解决方法如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker-compose up\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ERROR: Couldn't connect to Docker daemon at http+docker://localunixsocket - is it running?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If it's at a non-standard location, specify the URL with the DOCKER_HOST environment variable.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前用户加入docker组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gpasswd -a "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("}")]),t._v(" docker\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Adding user ubuntu to group docker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到 root")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" ubuntu "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切回 ubuntu 再次执行即可")]),t._v("\ndocker-compose up\n")])])]),a("p",[t._v("参考: "),a("a",{attrs:{href:"https://blog.csdn.net/xiojing825/article/details/79494408",target:"_blank",rel:"noopener noreferrer"}},[t._v("解决 ERROR: Couldn't connect to Docker daemon at http+docker://localunixsocket - is it running? | CSDN"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("同时启用mongo、mongo-express两个镜像服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个项目")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" mongo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" mongo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" docker-compose.yml\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml")]),t._v("\nversion: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\nservices:\n  mongo:\n    image: mongo\n    restart: always\n    ports:\n      - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v(":27017\n  mongo-express:\n    image: mongo-express\n    restart: always\n    ports:\n      - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(":8081\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行")]),t._v("\ndocker-compose up\n")])])]),a("p",[t._v("在浏览器打开 http://127.0.0.1:8000/ 就可以看到 mongo 客户端了")]),t._v(" "),a("h3",{attrs:{id:"docker-compose-up运行的都是旧代码-有缓存的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-up运行的都是旧代码-有缓存的问题"}},[t._v("#")]),t._v(" docker-compose up运行的都是旧代码，有缓存的问题")]),t._v(" "),a("p",[t._v("当包含有 Dockfile 需要 build 的情况，比如 node 项目。如果代码有改动，重新运行 docker-compose up，那么他还会是旧的代码，并没有刷新。")]),t._v(" "),a("p",[t._v("就算不使用 "),a("code",[t._v("docker-compose up --force-recreate")]),t._v(" 也不管用，"),a("strong",[t._v("还要加 --build，才会将修改后的代码重新build")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新创建容器，重新build")]),t._v("\ndocker-compose up --force-recreate --build\n")])])]),a("p",[t._v("参考："),a("a",{attrs:{href:"https://www.jianshu.com/p/18cb318445f4",target:"_blank",rel:"noopener noreferrer"}},[t._v("2019-11-07 史上大坑：使用docker-compose自动更新代码到容器 | 简书"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"前端后分离项目整体运行与部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端后分离项目整体运行与部署"}},[t._v("#")]),t._v(" 前端后分离项目整体运行与部署")]),t._v(" "),a("p",[t._v("使用 docker-compose 运行部署多个镜像，一次性部署前端后代码以及mysql")]),t._v(" "),a("ul",[a("li",[t._v("nginx 用于部署前端构建后的 dist 目录")]),t._v(" "),a("li",[t._v("mysql-db 用于启动 mysql 服务")]),t._v(" "),a("li",[t._v("app-pm2 用于部署 backend 目录下的 node 服务端项目")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token datetime number"}},[t._v("80:80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./nginx/conf.d/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/nginx/conf.d\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/www/html/\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql-db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'you passowrd'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3306"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./backend/dao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("entrypoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("initdb.d/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载数据初始化sql脚本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app-pm2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pm2\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建容器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./backend\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8700")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("db\n")])])]),a("h3",{attrs:{id:"nginx部署前端项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx部署前端项目"}},[t._v("#")]),t._v(" nginx部署前端项目")]),t._v(" "),a("p",[t._v("使用 nginx 镜像")]),t._v(" "),a("ol",[a("li",[t._v("自定义 nginx 配置，将前端目录下的 nginx/conf.d/docker.conf 映射到 docker 容器的 nginx 默认配置目录")]),t._v(" "),a("li",[t._v("将当前目录下的 dist 目录，映射到 nginx 默认目录")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml nginx 部分")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token datetime number"}},[t._v("80:80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./nginx/conf.d/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/nginx/conf.d\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/www/html/\n")])])]),a("p",[t._v("./nginx/conf.d/docker.conf")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql镜像"}},[t._v("#")]),t._v(" mysql镜像")]),t._v(" "),a("p",[t._v("开启 mysql 服务，设置一个连接密码，用于本地 mac、以及 docker 里的其他镜像实例去连接该数据库")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml mysql 部分")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql-db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'you passowrd'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 密码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3306"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("expose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./backend/dao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("entrypoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("initdb.d/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载数据初始化sql脚本")]),t._v("\n")])])]),a("p",[t._v("注意几个坑的问题")]),t._v(" "),a("p",[a("strong",[t._v("1. 允许外部 Host 连接，进入 mysql 镜像内部做修改，ubuntu默认ok，mac本地不可以，需要做如下修改")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps 查看到 mysql 镜像id 为 46e4xxx 后，进入该镜像")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it 46e4 /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接到 mysql")]),t._v("\nmysql -uroot -p\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" use mysql\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Host,User from user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+-----------+------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Host      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" User             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" %         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Host为 % 比是正常的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" localhost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" mysql.infoschema "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" localhost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" mysql.session    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" localhost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" mysql.sys        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" localhost "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+------------------+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" rows "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac系统下，如果有则修改")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" update user "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),t._v(" where "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("2. 无法使用socket方式连接到数据库，提示：ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock'")])]),t._v(" "),a("p",[t._v("一般 mysql 连接方式有两种，使用过 mac "),a("code",[t._v("Sequel Pro")]),t._v(" app 的应该都知道")]),t._v(" "),a("ul",[a("li",[t._v("mysql -uroot -p 属于 Socket 连接")]),t._v(" "),a("li",[t._v("mysql -uroot -p -h127.0.0.1 加了-h参数，属于TCP/IP连接")])]),t._v(" "),a("p",[t._v("可能是由于 docker 端口映射的问题，我们无法使用 Socket 方式连接，会一直报上面的错误。这种情况下，我们加上 "),a("code",[t._v("-h127.0.0.1")]),t._v(" 参数即可正常访问，暂时没找到其他解决方法。")]),t._v(" "),a("p",[a("strong",[t._v("3. 其他 docker 镜像(node项目)连接该 mysql 镜像连接不上")])]),t._v(" "),a("ul",[a("li",[t._v("mac环境下报错 "),a("code",[t._v("Error: connect ECONNREFUSED 127.0.0.1:3306")])]),t._v(" "),a("li",[t._v("ubuntu服务器环境报错 "),a("code",[t._v("ConnectionError [SequelizeConnectionError]: connect ETIMEDOUT")])])]),t._v(" "),a("p",[t._v("主要是因为 "),a("strong",[t._v("node服务的镜像实例与mysql镜像实例之间相互独立，node镜像实例里代码连接 127.0.0.1:3306 是无法访问到 mysql 镜像实例的，需要相关联")])]),t._v(" "),a("p",[t._v("这里有个临时解决方法，就是先后台运行，然后通过 "),a("code",[t._v("docker ps")]),t._v(" 查看对应的 镜像ID，再根据镜像ID，使用 "),a("code",[t._v("docker inspect 镜像ID")]),t._v(" 查看 mysql 镜像对应的 IP ，然后将代码里的 host 改为该 IP 即可。"),a("strong",[t._v("这个IP可能是动态的，比如从mac到Ubuntu系统，是不一样的。所以它只是临时解决方案，如果IP变更了，代码也要修改")]),t._v(" ，具体步骤如下")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后台运行")]),t._v("\ndocker-compose up --force-recreate --build -d\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CONTAINER ID        IMAGE  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4248f7c1d71b        nginx ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6a6b527f3193        zuo11com_app-pm2 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 46e47b6cc227        mysql ")]),t._v("\ndocker inspect 46e4\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#  "Gateway": "172.18.0.1",')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#  "IPAddress": "172.18.0.2",')]),t._v("\n")])])]),a("p",[t._v("修改 node 中修改 mysql 连接，重新运行 "),a("code",[t._v("docker-compose up --force-recreate --build -d")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sequelize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sequelize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ibd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234567Abc,.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'172.18.0.1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Gateway IP, docker从一个镜像访问里另一个镜像(mysql)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// host: 'localhost', // 默认情况")]),t._v("\n  dialect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'mysql' | 'mariadb' | 'postgres' | 'mssql' 之一 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("2020/10/06更新，"),a("strong",[t._v('一劳永逸解决方法：host 直接写mysql对应的镜像名 "mysql-db" 即可。由于都是运行在一个docker环境里，即使不使用 links，使用 mysql-db 也会映射到对应 mysql 镜像的 IPAddress。')])]),t._v(" "),a("p",[t._v("这里又会有另外一个问题，original: Error: connect ECONNREFUSED 172.26.0.3:3306，可以看到 mysql-db 这个 host 名并不是解析到 mysql 镜像的 Gateway 网关地址，而是镜像的 IPAddress。")]),t._v(" "),a("p",[t._v("这个问题的原因在于，node服务 depends_on mysql服务，但并不一定是等 mysql 镜像完全加载好才开始连接。所以 node 的 mysql 连接程序需要有错误重试的逻辑。如果出错，每隔2秒再重新连接。过个 5-10 秒，mysql 镜像完全初始化好，重连就正常了。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mysql 重连逻辑")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化数据库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建立连接")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数分别为: database, username, password, config")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sequelize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sequelize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据库名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'密码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql-db'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// docker从一个镜像访问里另一个镜像(mysql)")]),t._v("\n      dialect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'mysql' | 'mariadb' | 'postgres' | 'mssql' 之一 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试连接，使用 .authenticate() 函数来测试连接")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sequelize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果连接异常，会走catch的逻辑")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createConfigModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失败重连，fix dcoker-compose 连不上mysql容器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// original: Error: connect ECONNREFUSED 172.26.0.3:3306")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// depends_on 并不代表 mysql 数据库完全初始化好再启动当前服务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("4. 在 mysql 镜像执行 当前目录下的 .sql 文件")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后台运行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose up --force-recreate --build -d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以使用 docker-compose logs 查看日志")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps 查看mysql镜像id")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 mysql 镜像里，批量执行当前目录下的 .sql 文件")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -i mysql镜像id "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exec mysql -h127.0.0.1 -uroot -p数据库密码'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ./xxx.sql\n")])])]),a("p",[t._v("参考 "),a("a",{attrs:{href:"https://hub.docker.com/_/mysql",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql | Docker Hub"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"node-pm2服务端部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-pm2服务端部署"}},[t._v("#")]),t._v(" node pm2服务端部署")]),t._v(" "),a("p",[t._v("部署并运行 backend 下的镜像，会 build 执行该项目下的 Dockfile")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose.yml node pm2 部分")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app-pm2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pm2\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建容器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./backend\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("db\n")])])]),a("p",[t._v("./backend/Dockfile")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FROM")]),t._v(" keymetrics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pm2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("latest"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alpine\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WORKDIR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUN")]),t._v(" npm config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" registry https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taobao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \\\nnpm i\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EXPOSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CMD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pm2-runtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"process.yml"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用vscode-deploy插件部署项目到ubuntu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用vscode-deploy插件部署项目到ubuntu"}},[t._v("#")]),t._v(" 使用vscode Deploy插件部署项目到Ubuntu")]),t._v(" "),a("p",[t._v("假设项目名为 test_demo，目录结构如下")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("backend\nfrontend\nnginx\ndocker-compose.yml\n")])])]),a("p",[t._v("在 test_demo 当前目录下创建一个 "),a("code",[t._v(".vscode/settings.json")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"packages"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exclude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".git/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".vscode/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/node_modules/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deployOnSave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"targets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sftp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TencentServer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务器地址，注意我这里是ubuntu用户名，还可能是root")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dir"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/ubuntu/test_demo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"服务器ip地址"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ubuntu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用 ssh key登录")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "privateKey": "/Users/guoqzuo/.ssh/id_rsa",')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"服务器密码"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样，假设你的服务器ip密码都是正确的。那么在 vscode 里右键对应的目录，选择 Deploy current file /folder 就可以部署到服务器了。")]),t._v(" "),a("p",[t._v("把 frontend、backend、nginx、docker-compose.yml 等必须要的文件部署到 服务器后，在服务器执行对应的 docker-compose up 命令即可。")]),t._v(" "),a("p",[t._v("注意，"),a("strong",[t._v("腾讯云/阿里云等服务器一般有配置安全组，一般访问服务器的 3000端口，80端口等可能会被限制，需要在入规则里，开放对应的端口")])]),t._v(" "),a("h2",{attrs:{id:"使用github-webhooks做持续集成-自动化部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用github-webhooks做持续集成-自动化部署"}},[t._v("#")]),t._v(" 使用github Webhooks做持续集成，自动化部署")]),t._v(" "),a("p",[t._v("在上面的例子中，我们知道当我们写好 docker-compose.yml 后，再运行 docker-compose up 即可开启多个服务。持续集成可以做到提交代码后自动部署最新代码。")]),t._v(" "),a("p",[t._v("整个过程如下:")]),t._v(" "),a("ol",[a("li",[t._v("提交新的内容到github仓库，github仓库接收到push事件，触发对应的 webhooks 事件，向设置的一个 URL 发送 POST 请求。")]),t._v(" "),a("li",[t._v("专门用一个node接口来接收该请求。接收到请求后，如果是 master 分支的 push 事件，用 node 执行 shell 脚本（.sh 文件）")]),t._v(" "),a("li",[t._v("本地 shell 脚本用于 git pull 最新代码，并重新使用 docker-compose up 部署最新代码")])]),t._v(" "),a("h3",{attrs:{id:"配置github-webhooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置github-webhooks"}},[t._v("#")]),t._v(" 配置github webhooks")]),t._v(" "),a("p",[t._v("将项目文件放到 github 仓库，然后在对应的仓库，setting、选择 webhooks，添加 webhooks，如下图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/github_webhooks_1.png",alt:"github_webhooks_1.png"}})]),t._v(" "),a("p",[t._v("新建一个 webhooks，有下面几个字段")]),t._v(" "),a("ul",[a("li",[t._v("Payload URL: "),a("code",[t._v("http://www.xxx.com:8800/docker_deploy")]),t._v(" ，发送post请求的地址，你自己的服务器要处理该请求。测试时可以用 IP 地址")]),t._v(" "),a("li",[t._v("Content type: application/json，发送数据类型，一般选json，方便处理")]),t._v(" "),a("li",[t._v("secret: xxx  秘钥，做验证用，接口处理是需要使用")]),t._v(" "),a("li",[t._v("which events would you like to trigger this webhook? 触发该接口的时机我们选择仅 push 时触发")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/github_webhooks_2.png",alt:"github_webhooks_2.png"}})]),t._v(" "),a("p",[t._v("新增 webhooks 后，可以发测试请求，点击 redeliver 弹窗提示后再点击确认，这样就可以调试接口了。如下图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/github_webhooks_3.png",alt:"github_webhooks_3.png"}})]),t._v(" "),a("h3",{attrs:{id:"写node接口来处理webhooks请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写node接口来处理webhooks请求"}},[t._v("#")]),t._v(" 写node接口来处理webhooks请求")]),t._v(" "),a("p",[t._v("我们用一个简单的 nodejs 文件，在 8800 端口新建一个接口来处理 github webhooks 的请求，先写一个简单的测试 js")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webhook.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" createHandler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github-webhook-handler'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/docker_deploy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  secret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之间设置的秘钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no such location'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Webhook listen at 8800'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收所有事件(包括push事件)打印日志")]),t._v("\nhandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Received * '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们要在服务器跑起这个服务需要先在 ubuntu 系统上安装 node/npm")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认安装方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y nodejs\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu 安装node版本过低，怎么解决")]),t._v("\nnode -v "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# v8.10.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.5.2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将node升级到最新稳定版")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" cache clean -f\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" n stable\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 立即在终端生效")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再查看版本就是最新稳定版了")]),t._v("\nnode -v "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# v12.18.4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6.14.6")]),t._v("\n")])])]),a("p",[t._v("参考："),a("a",{attrs:{href:"https://blog.csdn.net/skylark0924/article/details/79306999",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用apt-get install安装node.js导致安装成低版本的解决方案 | CSDN"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("注意 npm init 一个 package.json，并安装 github-webhook-handler 模块，再 "),a("code",[t._v("nodemon webhook.js")]),t._v(" 开启服务，也可以把 nodemon webhook.js 使用 pm2 来管理。然后再在 github webhooks 里触发测试请求，当看到 Received * log，即表示接收成功，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/github_webhooks_4.png",alt:"github_webhooks_4.png"}})]),t._v(" "),a("h3",{attrs:{id:"sh脚本-拉取最新代码-重新部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sh脚本-拉取最新代码-重新部署"}},[t._v("#")]),t._v(" sh脚本：拉取最新代码，重新部署")]),t._v(" "),a("p",[t._v("这里已经知道如何接收事件了，我们再在 webhook.js 里加入执行 shell 脚本的代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用子进程执行命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run_cmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" spawn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("spawn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" resp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收到 push 事件时，执行 sh ./deploy-master.sh")]),t._v("\nhandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Received a push event for %s to %s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分支判断，如果是master，已改名 main")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/main'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy main..'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run_cmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./deploy-master.sh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在当前目录新建一个 deploy-master.sh 文件，内容先只有 "),a("code",[t._v("ls")]),t._v("，用于测试，修改代码后，再次测试，如下图，ls执行成功过即表示代码正常。")]),t._v(" "),a("p",[a("strong",[t._v("注意，1. 模拟请求可能会拿不到 event.payload.ref 的值，需要出发真实的 push 请求才有 2.如果 deploy-master.sh 没有可执行权限，那么就需要执行 chmod +x 文件名，来给他加可执行权限")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/docker/github_webhooks_5.png",alt:"github_webhooks_5.png"}})]),t._v(" "),a("p",[t._v("修改部署脚本")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deploy-master.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Start Deploy"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取最新版代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止原先的镜像实例(容器)")]),t._v("\ndocker-compose down\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新build，创建实例化镜像(容器)")]),t._v("\ndocker-compose up -d --force-recreate --build\n")])])]),a("p",[t._v("这里要注意 git pull 的问题。我们这里要放弃之间 vscode 插件部署的方法，要使用 git pull 的方式来更新部署代码，这样才不会有冲突。")]),t._v(" "),a("p",[t._v("这里我们要先在 ubuntu 系统里 git clone github的仓库，建议使用 ssh 的方法， 使用 "),a("code",[t._v('ssh-keygen -t rsa -C "xxx@qq.com"')]),t._v(" 生成公钥私钥，然后再把公钥配置到 github 个人账号 setting 里的 ssh keys里面。就可以使用 ssh 地址正常拉取了。")]),t._v(" "),a("p",[t._v("这样就可以实现提交代码到master分支就自动部署最新代码了")]),t._v(" "),a("h2",{attrs:{id:"常见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见错误"}},[t._v("#")]),t._v(" 常见错误")]),t._v(" "),a("h3",{attrs:{id:"is-the-docker-daemon-running"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#is-the-docker-daemon-running"}},[t._v("#")]),t._v(" Is the docker daemon running?")]),t._v(" "),a("p",[t._v("运行 docker 命令时，如果出现提示 "),a("code",[t._v("Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?")]),t._v("。")]),t._v(" "),a("p",[t._v("一般是 docker 没有启动，如果是 mac，打开 docker app 即可启动 docker 服务。对于 linux 系统，使用 "),a("code",[t._v("systemctl start docker")]),t._v(" 即可开启 docker 守护进程。参考 "),a("a",{attrs:{href:"https://stackoverflow.com/questions/44678725/cannot-connect-to-the-docker-daemon-at-unix-var-run-docker-sock-is-the-docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("Is the docker daemon running? - Stack Overflow"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"failed-to-solve-with-frontend-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#failed-to-solve-with-frontend-dockerfile"}},[t._v("#")]),t._v(" failed to solve with frontend dockerfile")]),t._v(" "),a("p",[t._v("运行 "),a("code",[t._v("docker build -t 镜像名 .")]),t._v(" 使用当前目录的 Dockerfile 创建定制的镜像时，如果出现以下错误")]),t._v(" "),a("p",[t._v("failed to solve with frontend dockerfile.v0: failed to read dockerfile: open /var/lib/docker/tmp/buildkit-mount477390958/Dockerfile: no such file or directory")]),t._v(" "),a("p",[a("strong",[t._v("一般是 Dockerfile 命名错误，注意大小写，不能是 DockerFile、dockerfile")])])])}),[],!1,null,null,null);s.default=e.exports}}]);